name: SQLite_to_JSON

on:
  push:
    paths:
      - 'golfscorecard.api/database/**' # Trigger on updates to the database folder
  workflow_dispatch: # Allows manual triggering

jobs:
  update-data:
    runs-on: ubuntu-latest
    env:
      skip: 'false'

    steps:
      - uses: actions/checkout@v2

      - name: Set up SQLite
        run: sudo apt-get install -y sqlite3

      # Ensure JSON file creation for each table
      - name: Prepare Player Table JSON
        run: |
          touch _data/player.json
          sqlite3 -json golfscorecard.api/database/golfScores.db "SELECT * FROM Player;" > _data/player.json

      - name: Prepare GolfCourse Table JSON
        run: |
          touch _data/golf_course.json
          sqlite3 -json golfscorecard.api/database/golfScores.db "SELECT * FROM GolfCourse;" > _data/golf_course.json

      - name: Prepare Hole Table JSON
        run: |
          touch _data/hole.json
          sqlite3 -json golfscorecard.api/database/golfScores.db "SELECT * FROM Hole;" > _data/hole.json

      - name: Prepare Score Table JSON
        run: |
          touch _data/score.json
          sqlite3 -json golfscorecard.api/database/golfScores.db "SELECT * FROM Score;" > _data/score.json

      - name: Prepare TeeBox Table JSON
        run: |
          touch _data/tee_box.json
          sqlite3 -json golfscorecard.api/database/golfScores.db "SELECT * FROM TeeBox;" > _data/tee_box.json

      - name: Prepare WeatherConditions Table JSON
        run: |
          touch _data/weather_conditions.json
          sqlite3 -json golfscorecard.api/database/golfScores.db "SELECT * FROM WeatherConditions;" > _data/weather_conditions.json

      - name: Prepare Achievement Table JSON
        run: |
          touch _data/achievement.json
          sqlite3 -json golfscorecard.api/database/golfScores.db "SELECT * FROM Achievement;" > _data/achievement.json

      - name: Prepare PlayerStatistics Table JSON
        run: |
          touch _data/player_statistics.json
          sqlite3 -json golfscorecard.api/database/golfScores.db "SELECT * FROM PlayerStatistics;" > _data/player_statistics.json

      # Check if there are changes to commit
      - name: Check for changes
        id: check_changes
        run: |
          git add _data/*.json
          if git diff --cached --quiet; then
            echo "No changes to commit"
            echo "::set-output name=changes::false"
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "Changes detected"
            echo "::set-output name=changes::true"
          fi

      # Commit changes only if there are staged changes
      - name: Commit changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "Update data files from SQLite tables"

      # Push changes only if there are changes and skip is not set to 'true'
      - name: Push changes
        if: success() && env.skip != 'true'
        run: |
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/Ikkimaru/golfScorecard.git
